#!/bin/bash

LATEST=2014-07-25
CACHE="$HOME/.cache/kspmods"

touch ~/.kspmods
mkdir -p "$CACHE"

function _help() {
  printf "%20s  %s\n" "$1" "$2"
}

function mod-help() {
  _help "ls" "list all known mods"
  _help "add <link> <name>" "add a new mod to the list"
  _help "refresh" "fetch latest version information from KSP forums"
  _help "check" "check mods against fetched version info and report any that need updates"
  _help "updated <id...>" "mark a mod or mod as updated"
  _help "rm <id...>" "remove mods from the list"
  _help "url <id...>" "get URL to forum thread for a mod"
}

# check all mods for updates
# syntax: ksp check
# produces: a table of known mods with installed version vs latest version
function mod-check() {
  printf "%8s %15s %15s    %s\n" ID VERSION DATE NAME
  cat ~/.kspmods | while read id version date name; do
    local new_version=$(get-version $id)
    local new_date=$(get-date $id)

    [[ $date == $new_date && $version == $new_version ]] && {
      [[ $date < $LATEST ]] && {
        printf "\033[1;32m%8d %15s \033[1;33m%15s\033[1;32m    %s\n" $id $version $date "$name"
      } || {
        printf "\033[1;32m%8d %15s %15s    %s\n" $id $version $date "$name"
      }
    } || {
      printf "\033[1;31m%8d %15s %15s    %s\n" $id $version $date "$name"
      printf "%8s %15s %15s    %s\n" "" "$new_version" "$new_date" "$(mod-url $id)"
    }
  done
}

function mod-refresh() {
  rm -rf "$CACHE"/*
  cat ~/.kspmods | while read id _ _ name; do
    echo -ne '\r\x1B[K'
    echo -n "$name"
    fetch-thread "$id"
  done
  echo -e '\r\x1B[KDone.'
}

# add a mod
# syntax: ksp add <forum link> <mod name>
function mod-add() {
  local id="$(link-to-id $1)"; shift
  local name

  exists $id && {
    echo "Mod already exists in database."
    exit 1
  }

  [[ $1 ]] && {
    name="$*"
  } || {
    echo "No name specified."
    exit 1
  }

  printf "%s\t%s\t%s\t%s\n" $id $(get-version $id) $(get-date $id) "$name" | tee -a ~/.kspmods
  sort -k 4 ~/.kspmods > /tmp/$$.kspmods
  mv /tmp/$$.kspmods ~/.kspmods
}

function mod-url() {
  local id="$1"; shift
  echo "http://forum.kerbalspaceprogram.com/threads/$id"

  [[ $1 ]] && mod-url "$@"
}

# tell it that you've updated a mod to the latest version
function mod-updated() {
  exists $1 || {
    echo "Mod does not exist in database."
    exit 1
  }

  local name=$(egrep "^$1" ~/.kspmods | cut -f4)
  mod-rm $1 >/dev/null
  mod-add $1 "$name"

  shift
  [[ $1 ]] && mod-updated "$@"
}

function mod-rm() {
  echo -n "rm "
  egrep "^$1" ~/.kspmods
  egrep -v "^$1" ~/.kspmods > /tmp/$$.kspmods
  mv /tmp/$$.kspmods ~/.kspmods

  shift
  [[ $1 ]] && mod-rm "$@"
}

function mod-ls() {
  printf "%8s %15s %15s    %s\n" ID VERSION DATE NAME
  cat ~/.kspmods | while read tid version date name; do
    printf "%8d %15s %15s    %s\n" $tid $version $date "$name"
  done
}

function mod-ids() {
  cat ~/.kspmods | cut -f1
}

function link-to-id() {
  echo "$1" | egrep -o "[^/]+$" | egrep -o "^[0-9]+"
}

function fetch-thread() {
  wget -c -q -O "$CACHE/$1" "http://forum.kerbalspaceprogram.com/threads/$1"
}

function get-first-post() {
  [[ ! -f "$CACHE/$1" ]] && fetch-thread "$1"
  <"$CACHE/$1" awk 'BEGIN {flag=0}; /div class="postbody"/ {flag=1}; /<title>/ {print $0}; (flag) {print $0}; /div class="postfoot"/ {exit 0};'
}

function strip-tags() {
  sed -r 's/<[^>]+>//g'
}

function get-date() {
  get-first-post "$1" > /tmp/$$.$1

  local posted=$(</tmp/$$.$1 egrep -m1 'span class="date"' | sed -r 's/[^>]+>([^,]+),.*/\1/; s/([0-9]+)[a-z]*/\1/' | date -I -f -)
  local edited=$(</tmp/$$.$1 egrep "Last edited by" | tail -n1 \
                 | sed -r 's/.*Last edited by .*; (.*) at <span.*/\1/; s/([0-9]+)[a-z]*/\1/' | date -I -f -)

  echo -e "$posted\n$edited" | sort | tail -n1
}

function version-from-string() {
  egrep -vi license \
  | (egrep -oi '([bvr]|(rc|release( candidate)?|build|ver(sion)?|rev(ision)?) *)[0-9.][0-9.]+' || echo "unknown") \
  | sed -r 's/[bvr][^0-9 ]+/v/i; s/ //g;' | sort | tail -n1
}

function get-version() {
  get-first-post "$1" > /tmp/$$.$1

  local version="$(</tmp/$$.$1 fgrep -n1 '<title>' | version-from-string)"
  [[ $version != "unknown" ]] && {
    echo "$version"
    return 0
  }

  </tmp/$$.$1 strip-tags | version-from-string
}

function exists() {
  egrep -q "^$1" ~/.kspmods
}


[[ $1 ]] || { echo "usage: ksp <command> <args>"; exit 1; }

command=$1; shift
mod-$command "$@"
rm -f /tmp/$$.*
